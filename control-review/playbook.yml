---
- name: Playbook Control Lab
  hosts: webservers
  vars_files: vars.yml
  force_handlers: true
  tasks:
    #Fail Fast Message
    - name: checking RAM
      fail:
        msg: "Insufficient RAM on remote hosts Minimum RAM: {{ min_ram_mb }} MB"
      when: ansible_memtotal_mb <= min_ram_mb
    - name: checking OS
      fail:
        msg: "The remote host is not running Red Hat Enterprise Linux."
      when: ansible_distribution != 'RedHat' 
    #Install all Packages
    - name: Ensure required packages are present.
      dnf:
        name: "{{ packages }}"
        state: latest
    #Enable and start services
    - name: Enable and start services
      service:
        name: "{{ item }}"
        enabled: yes
        state: started
      with_items: "{{ services }}"
    #Block of config tasks
    - name: testing block
      block:
        - name: create ssl directory
          file:
            path: "{{ ssl_cert_dir }}"
            state: directory
          register: cert_result
          notify: 
              - restart web service
        - name: debug ssl
          debug:
            var: cert_result
        - name: copy each file to the correct destination on the remote host
          copy:
            src: "{{ item['src'] }}"
            dest: "{{ item['dest'] }}"
          with_items: "{{ web_config_files }}"
          notify: 
              - restart web service
      rescue:
        - name: debug configuration failure
          debug:
            msg: "One or more of the configuration changes failed, but the web service is still active."
      # always:
      #   - name: restart service
      #     notify: 
      #       - restart web service
    #Configure the firewall
    - name: configure firewall
      firewalld:
        service: "{{ item }}"
        permanent: true
        immediate: yes
        state: enabled
      with_items: 
        - http
        - https
      notify: restart firewall
  #Add handlers
  handlers:
    - name: restart web service
      service:
        name: "{{ web_service }}"
        enabled: yes
        state: restarted
    - name: restart firewall
      service:
        name: "{{ fw_service }}"